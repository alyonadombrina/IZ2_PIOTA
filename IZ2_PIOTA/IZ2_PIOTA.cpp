//ЮФУ, ИКТИБ, МОП ЭВМ
//Программирование и основы теории алгоритмов часть 2
//Домашнее задание №2 -  ПРФ
//КТбо1-6, Домбрина Алёна Игоревна
//Вариант 2.27
//12.04.24

#include <iostream>
using namespace std;
typedef long long ll;
//Функция f вычисляет рекурсивно функцию вида f(x1, x2)
//Входные данные: 
//x1 - первый аргумент функции
//x2 - второй аргумент функции
//Переменные внутри функции:
//f_value - значение функции для аргументов x1 и x2
//y - аргумент f(y,x) в функции h, предыдущее значение функции
//Функция f возвращает f_value - значение  функции для х1 и х2
ll f(ll, ll);

int main()
{
    setlocale(LC_ALL, "Russian");
    cout << "Схема рекурсии:" << endl << "f(0,x) = g(x) = 0" << endl << "f(y+1,x) = h(y,f(y,x),x) = y*y*y + f(y,x)" << endl;
    char command = 'y';
    cout << endl;
    do {
        ll x1, x2;
        cout << "Введите х1 и х2, чтобы мы могли вычислить функцию: ";
        cin >> x1 >> x2;
        if (x1 < 0 || x2 < 0)
        {
            cout << "Вы использовали число(-а), не принадлежащие области определения." << endl; 
        }
        else 
        {
            f(x1, x2);
            cout << endl;
        }
        cout << "Хотите продолжить работу? Для продолжения работы нажмите y, для выхода - n: ";
        cin >> command;
        cout << endl;
        while (command != 'y' && command != 'n')
        {
            cout << "Вы ввели неизвестную нам команду :( Попробуйте ещё раз!" << endl;
            cout << "Хотите продолжить работу? Для продолжения работы нажмите y, для выхода - n: ";
            cin >> command;  
            cout << endl;
        }
    } while (command != 'n');
    cout <<"Спасибо за внимание!" << endl;
    return 0;
}

ll f(ll x1, ll x2) 
{
    ll function_value = 0;
    ll y;
    if (x1 == 0)
    {
        cout << "f(" << x1 << "," << x2 << ") = g(" << x1 << ") = " << function_value << endl;
    }
    else
    {
        y = f(x1 - 1, x2);
        function_value = (x1 - 1) * (x1 - 1) * (x1 - 1) + y;
        cout << "f(" << x1 << "," << x2 << ") = h(" << x1 - 1 << ",f(" << x1 - 1 << "," << x2 << ")," << x2 << ") = h(" << x1 - 1 << "," << y << "," << x2 << ") = " << function_value << endl;
    }
    return function_value;
}

   